[uwsgi]
chdir = /home/syncano/app/
log-format = %(addr) - [%(ltime)] %(host) %(method) %(uri) => generated %(size) bytes in %(msecs) msecs (%(proto) %(status))

workers = 2

master = true
vacuum = true
module = conf.wsgi
limit-post = 10485760
buffer-size = 8192
listen = 1024

touch-reload = settings/common.py
if-env = AUTORELOAD
py-autoreload = 1
endif

reload-mercy = 10
socket-timeout = 30
socket = :8001
http = :8100
static-map = /static=static

uid = syncano
gid = syncano

die-on-term = true
need-app = true
single-interpreter = true
ignore-sigpipe = true
close-on-exec = true
enable-threads = true

; graceful shutdown on SIGINT
worker-reload-mercy = 360
hook-master-start = unix_signal:2 gracefully_kill_them_all

; offloading
offload-threads = 2
http-websockets = true

; if UWSGI_HANDLER is defined, do not send the headers generated by Django
response-route-if-not = empty:${UWSGI_HANDLER} disableheaders:
; if UWSGI_HANDLER is defined, offload the request to the external uwsgi app
response-route-if-not = empty:${UWSGI_HANDLER} uwsgi:${UWSGI_HANDLER},0,0
; if OFFLOAD_HANDLER is defined, do not send the headers generated by Django
response-route-if-not = empty:${OFFLOAD_HANDLER} disableheaders:
; if OFFLOAD_HANDLER is defined, offload the request to the offload app running
response-route-if-not = empty:${OFFLOAD_HANDLER} uwsgi:127.0.0.1:8003,0,0
